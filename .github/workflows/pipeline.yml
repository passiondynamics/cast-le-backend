name: Backend
run-name:  ${{ github.run_id }}.${{ github.run_number }}.${{ github.run_attempt }}
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  pipeline:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            Pipfile.lock
            src/
            tests/
          persist-credentials: false
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pipenv'
      - name: Set up pipenv
        run: |
          echo "[*] Installing pipenv..."
          pip install pipenv
          echo "[*] Syncing `Pipfile.lock`..."
          pipenv sync --dev
      - name: Run unit tests
        run: pipenv run pytest --cov=src tests/unit/
      - name: Build artifact
        run: |
            echo "[*] Setting up artifact workspace..."
            mkdir package/
            echo "[*] Downloading dependencies..."
            pipenv requirements > requirements.txt
            pipenv run pip install -t package/ -r requirements.txt
            echo "[*] Copying source files..."
            cp -r src package/
            echo "[*] Zipping workspace..."
            cd package/
            zip -r ../artifact.zip .
            cd ..
            echo "[*] Cleaning up workspace..."
            rm -r requirements.txt package/
            ls -Ahl
